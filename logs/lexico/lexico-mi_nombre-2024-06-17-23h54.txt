2024-06-17 23:54:03,161 | Algoritmo 1
2024-06-17 23:54:03,161 | INPUT : 
    ; Numero es par o impar
(defn determinar-paridad [numero]
  (if (integer? numero)
    (if (zero? (mod numero 2))
      "es par"
      "es impar")
    (str numero " no es un número entero")))
    
2024-06-17 23:54:03,161 | LexToken(LPAREN,'(',3,29)
2024-06-17 23:54:03,161 | LexToken(DEFN,'defn',3,30)
2024-06-17 23:54:03,161 | LexToken(ID,'determinar-paridad',3,35)
2024-06-17 23:54:03,161 | LexToken(LBRACK,'[',3,54)
2024-06-17 23:54:03,169 | LexToken(ID,'numero',3,55)
2024-06-17 23:54:03,169 | LexToken(RBRACK,']',3,61)
2024-06-17 23:54:03,169 | LexToken(LPAREN,'(',4,65)
2024-06-17 23:54:03,169 | LexToken(IF,'if',4,66)
2024-06-17 23:54:03,169 | LexToken(LPAREN,'(',4,69)
2024-06-17 23:54:03,169 | LexToken(ID,'integer?',4,70)
2024-06-17 23:54:03,169 | LexToken(ID,'numero',4,79)
2024-06-17 23:54:03,169 | LexToken(RPAREN,')',4,85)
2024-06-17 23:54:03,169 | LexToken(LPAREN,'(',5,91)
2024-06-17 23:54:03,169 | LexToken(IF,'if',5,92)
2024-06-17 23:54:03,169 | LexToken(LPAREN,'(',5,95)
2024-06-17 23:54:03,169 | LexToken(ID,'zero?',5,96)
2024-06-17 23:54:03,169 | LexToken(LPAREN,'(',5,102)
2024-06-17 23:54:03,169 | LexToken(MOD,'mod',5,103)
2024-06-17 23:54:03,169 | LexToken(ID,'numero',5,107)
2024-06-17 23:54:03,169 | LexToken(INT,2,5,114)
2024-06-17 23:54:03,169 | LexToken(RPAREN,')',5,115)
2024-06-17 23:54:03,169 | LexToken(RPAREN,')',5,116)
2024-06-17 23:54:03,169 | LexToken(STRING,'"es par"',6,124)
2024-06-17 23:54:03,177 | LexToken(STRING,'"es impar"',7,139)
2024-06-17 23:54:03,177 | LexToken(RPAREN,')',7,149)
2024-06-17 23:54:03,177 | LexToken(LPAREN,'(',8,155)
2024-06-17 23:54:03,177 | LexToken(ID,'str',8,156)
2024-06-17 23:54:03,177 | LexToken(ID,'numero',8,160)
2024-06-17 23:54:03,177 | LexToken(STRING,'" no es un número entero"',8,167)
2024-06-17 23:54:03,177 | LexToken(RPAREN,')',8,192)
2024-06-17 23:54:03,177 | LexToken(RPAREN,')',8,193)
2024-06-17 23:54:03,177 | LexToken(RPAREN,')',8,194)
